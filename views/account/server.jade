extends ../layout

block content

  //- if droplet && droplet.status !== 'archive'
    ul
      li= droplet.name
        ul
          li id - #{droplet.id}
          li name - #{droplet.name}
          li image_id - #{droplet.image_id}
          li size_id - #{droplet.size_id}
          li region_id - #{droplet.region_id}
          li backups_active - #{droplet.backups_active}
          li ip_address - #{droplet.ip_address}
          li private_ip_address - #{droplet.private_ip_address}
          li locked - #{droplet.locked}
          li status - #{droplet.status}
          li created_at - #{droplet.created_at}
          li #{JSON.stringify(droplet.snapshots)}
  //- else
    h2 sorry, no server!

  //- if stats
    h2.page-header Balance
    p 
      form.form-horizontal
        input(type='hidden', name='_csrf', value=token)
        //- if stats.tokens
        .form-group
          label.col-sm-2.control-label(for='balance') Token Balance
          .col-sm-4
            input.form-control(type='balance', name='balance', id='balance', value='#{stats.tokens}', readonly)
        //- if stats.life
        //- .form-group
          label.col-sm-2.control-label(for='life') Server Lifetime
          .col-sm-4
            input.form-control(type='life', name='life', id='life', value='#{stats.life}', readonly)
        //- if stats.spent
        //- .form-group
          label.col-sm-2.control-label(for='spent') Tokens Spent
          .col-sm-4
            input.form-control(type='spent', name='spent', id='spent', value='#{stats.spent}', readonly)      

  if !droplet
    h2.page-header To Get Started Create a Server.
    p
      form(action='/server/boot', method='POST')
        input(type='hidden', name='_csrf', value=token)
        input(type='hidden', name='domain', value='#{user.profile.domain}')
        button.btn.btn-primary(type='submit')
          i.fa.fa-gamepad
          |  Vanilla Starbound
          i.fa.fa-circle-o(style='margin-left: 10px;')
          |  2x2GHz, 2GB
          i.fa.fa-circle-o(style='margin-left: 10px;')
          |  1 Token
          i.fa.fa-circle-o(style='margin-left: 10px;')

    //- .form-group
      ul
        li current server has lived for: #{stats.life}
        li current server tokens spent: #{stats.spent}
        li current_tokens_estimate: #{stats.tokens}

    //- h2.page-header Manage Server Information
    //- p 
      form.form-horizontal(action='/server', method='POST')
        input(type='hidden', name='_csrf', value=token)
        .form-group
          label.col-sm-2.control-label(for='name') Name
          .col-sm-4
            input.form-control(type='text', name='name', id='name', value='#{user.profile.name}', readonly)
        .form-group
          label.col-sm-2.control-label(for='tokens') Tokens
          .col-sm-4
            input.form-control(type='tokens', name='tokens', id='tokens', value='#{user.server.tokens}', readonly)
        .form-group
          label.col-sm-2.control-label(for='billed_seconds') Billed Seconds
          .col-sm-4
            input.form-control(type='billed_seconds', name='billed_seconds', id='billed_seconds', value='#{user.server.billed_seconds}', readonly)
        .form-group
          label.col-sm-2.control-label(for='size') Size
          .col-sm-4
            if user.server.size == '66'
              input.form-control(type='text', name='size', id='size', value='512MB', readonly)
            else if user.server.size == '62'
              input.form-control(type='text', name='size', id='size', value='2GB', readonly)
            else
              input.form-control(type='text', name='size', id='size', value='#{user.server.size}', readonly)
        //- .form-group
          label.col-sm-2.control-label(for='host_name') Hostname
          .col-sm-4
            input.form-control(type='text', name='host_name', id='host_name', value='#{user.server.host_name}', readonly)
        //- .form-group
          label.col-sm-2.control-label(for='ip_address') IP Address
          .col-sm-4
            input.form-control(type='text', name='ip_address', id='ip_address', value='#{user.server.ip_address}', readonly)
        .form-group
          label.col-sm-2.control-label(for='id') ID
          .col-sm-4
            input.form-control(type='text', name='id', id='id', value='#{user.server.id}', readonly)
        .form-group
          label.col-sm-2.control-label(for='image') Image
          .col-sm-4
            input.form-control(type='text', name='image', id='image', value='#{user.server.image}', readonly)
        //- .form-group
          label.col-sm-2.control-label(for='snapshots') Snapshots
          .col-sm-4
            input.form-control(type='text', name='snapshots', id='snapshots', value='#{JSON.stringify(user.server.snapshots)}', readonly)
        //- .form-group
          .col-sm-offset-2.col-sm-4
            button.btn.btn.btn-primary(type='submit')
              i.fa.fa-magnet
              | Update Server Info

  if droplet && droplet.locked
    h2 The Server is locked because an event is processing. Please be patient.
    p shutdowns take about 10 seconds
    p reboots take about 30 seconds
    //- p taking a server image takes 2-10 min
    p starting a new server takes 1-2 min
    p this page checks every 5 seconds for you
    style body{ background: url(/img/crazy_loop.gif); } .middle.container { background: rgba(255,255,255,0.7); }
    script.
      window.setInterval(function(){
        location.reload();
      }, 5000);
    //- img(src='https://i.imgur.com/RRfpIuS.gif')
  else

    if droplet && droplet.status == 'active'
      h2.page-header Server Active - #{droplet.ip_address}
      p Created At #{droplet.created_at}
      p 2GB, 2x2GHz Intel @ 1 Token/hr
      p 
        strong #{stats.tokens} Tokens Remaining
      br

      if droplet && droplet.status == 'active'
        p
          a(href='/server/poweroff')
            button.btn.btn-info 
              i.fa.fa-caret-square-o-down 
              | Shut Down Server

      h2.page-header Password
      p Set your server password, leave blank to make public, this will restart StarBound.
        form.form-horizontal(action='/server/runscript', method='POST')
          input(type='hidden', name='_csrf', value=token)
          input(type='hidden', name='script', value='password')
          input(type='hidden', name='ip_address', value='#{droplet.ip_address}')
          .form-group
            label.col-sm-2.control-label(for='password') Server Password
            .col-sm-4
              input.form-control(name='password', value='#{user.server.password}')
          .form-group
            .col-sm-offset-2.col-sm-4
              button.btn.btn-success(type='submit')
                i.fa.fa-cogs
                | Set Password

      //- if droplet
      //-   h2.page-header Server Image (Your Backup Slot)
      //- if user.server.image
      //-   p Your Image Number Is: #{user.server.image}
      //- if image
      //-   p=JSON.stringify(image)
      //-   p You need to shutdown the server before you can take a new image.

      h2.page-header Troubleshoot
      p Restart StarBound first, then try doing the Hardware Reboot.
      p Step 1
      p
        form(action='/server/runscript', method='POST')
          input(type='hidden', name='_csrf', value=token)
          input(type='hidden', name='script', value='restart')
          input(type='hidden', name='ip_address', value='#{droplet.ip_address}')
          button.btn.btn-info(type='submit')
            i.fa.fa-repeat
            | Restart Starbound Process
      if droplet && droplet.status == 'active'
        p Step 2
        p
          a(href='/server/powercycle')
            button.btn.btn-warning
              i.fa.fa-undo
              |  Hardware Reboot


    if droplet && droplet.status == 'off'
      h2.page-header Server Inactive...
      p 
        strong #{stats.tokens} Tokens Remaining
      p Still consuming tokens! - Destroy the server to stop using tokens.
      p In the near future there will be options here to save your server here before destroying it.

    if droplet && droplet.status == 'off'
      p
        form(action='/server/poweron', method='GET')
          button.btn.btn-success(type='submit')
            i.fa.fa-lightbulb-o
            | Power On Server
      h2 
      //- p
        form(action='/server/snapshot', method='POST')
          input(type='hidden', name='_csrf', value=token)
          //- input(type='hidden', name='name', value='#{user.profile.name}')
          //- input(type='hidden', name='image', value='#{user.server.image}')
          button.btn.btn-info(type='submit')
            i.fa.fa-save
            | Take A New Image
      //- if user.server.image != '2629230'
        .page-header
          h2 You have a saved server image (beta)
              .page-header
          h2 Restore Your Server Image - #{user.server.image}
        form(action='/server/boot', method='POST')
          input(type='hidden', name='_csrf', value=token)
          input(type='hidden', name='name', value='#{user.profile.domain}')
          input(type='hidden', name='image', value='#{user.server.image}')
          button.btn.btn-primary(type='submit')
            i.fa.fa-cogs
            |  Restore Server

    //- if !droplet && user.server.image
    if user.server.image === '' && user.server.id !== '' && droplet.status == 'off'    
      p You have to take your first server image before you can destory your droplet and stop spending tokens.
      P Taking an image will bring your server back up. Just shut it down again.

    if user.server.image && user.server.id !== '' && droplet.status == 'off'
      h2
      p
        form(action='/server/destroy', method='GET')
          button.btn.btn-danger(type='submit')
            i.fa.fa-fire
            | Destroy Server

    //- if !droplet && user.server.image


      //- .page-header
        h2 Start A Brand New Image on a Brand New Server
      //- form(action='/server/boot', method='POST')
        input(type='hidden', name='_csrf', value=token)
        input(type='hidden', name='name', value='#{user.profile.domain}')
        button.btn.btn-primary(type='submit')
          i.fa.fa-cogs
          |  Start New Server

    br
    br


    //- if droplet && droplet.status == 'off' && JSON.stringify(user.server.snapshots) != '[]'
    //-   p
    //-     a(href='/server/boot')
    //-       button.btn.btn-primary Restore Server
    //-   p imageId
    //-   p
    //-     a(href='/server/rebuild')
    //-       button.btn.btn-primary Rebuild Server
    //-   p imageId
      //- p
      //-   a(href='/server/shutdown')
      //-     button.btn.btn-primary Power Cycle Server


    //- if secrets.localAuth
    //-   .page-header
    //-     h2 Change DNS!

    //-   form.form-horizontal(action='/account/password', method='POST')
    //-     input(type='hidden', name='_csrf', value=token)
    //-     .form-group
    //-       label.col-sm-3.control-label(for='password') Hostname
    //-       .col-sm-4
    //-         input.form-control(type='password', name='password', id='password')
    //-     .form-group
    //-       label.col-sm-3.control-label(for='confirmPassword') IP Address
    //-       .col-sm-4
    //-         input.form-control(type='password', name='confirmPassword', id='confirmPassword')
    //-     .form-group
    //-       .col-sm-offset-3.col-sm-4
    //-         button.btn.btn.btn-primary(type='submit')
    //-           i.fa.fa-keyboard-o
    //-           | Change DNS Record
